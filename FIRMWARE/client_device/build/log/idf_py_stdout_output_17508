[1/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\HUST\20241\Project_2_20241\FIRMWARE\client_device\build\bootloader\esp-idf\esptool_py && C:\Users\ASUS\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Users/ASUS/Espressif/frameworks/esp-idf-v5.1.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/HUST/20241/Project_2_20241/FIRMWARE/client_device/build/bootloader/bootloader.bin"
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/protocol/ble.c.obj
[3/7] Linking C static library esp-idf\main\libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable sensor_client.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 27 ELF sections
Successfully created esp32 image.
Generated D:/HUST/20241/Project_2_20241/FIRMWARE/client_device/build/sensor_client.bin
[7/7] cmd.exe /C "cd /D D:\HUST\20241\Project_2_20241\FIRMWARE\client_device\build\esp-idf\esptool_py && C:\Users\ASUS\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Users/ASUS/Espressif/frameworks/esp-idf-v5.1.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/HUST/20241/Project_2_20241/FIRMWARE/client_device/build/partition_table/partition-table.bin D:/HUST/20241/Project_2_20241/FIRMWARE/client_device/build/sensor_client.bin"
sensor_client.bin binary size 0xf3750 bytes. Smallest app partition is 0x100000 bytes. 0xc8b0 bytes (5%) free.
Warning: The smallest app partition is nearly full (5% free space left)!
